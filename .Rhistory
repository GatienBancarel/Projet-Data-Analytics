)
)
),
tabItem(tabName = "city2",
fluidRow(
box(
uiOutput("", width = 6)
),
box(
uiOutput("", width = 6)
),
),
tabsetPanel(
tabPanel("Map",
fluidRow(
leafletOutput("mymap"),br()
)
),
tabPanel("Price and Review Ratings",
),
tabPanel("Prices  Evolution",
)
)
),
tabItem(tabName = "city3",
fluidRow(
box(
uiOutput("", width = 6)
),
box(
uiOutput("", width = 6)
),
),
tabsetPanel(
tabPanel("Map",
fluidRow(
leafletOutput("mymap"),br()
)
),
tabPanel("Price and Review Ratings",
),
tabPanel("Prices  Evolution",
)
)
)
)
)
)
library(shinydashboard)
library(shiny)
library(dplyr)
library(tm)
library(stringr)
library(tidyr)
library(leaflet)
library(plotrix)
library(ggplot2)
library(wordcloud)
ui <- dashboardPage(skin = "red",
dashboardHeader(title = "Data Analytics - Airbnb Projet"),
dashboardSidebar(
sidebarMenu(
menuItem("City1", tabName = "city1", icon = icon("home")
),
menuItem("City 2", tabName = "city2", icon = icon("home")
),
menuItem("City 3", tabName = "city3", icon = icon("home")
)
)
),
dashboardBody(
tabItems(
tabItem(tabName = "city1",
fluidRow(
box(
uiOutput("", width = 6)
),
box(
uiOutput("", width = 6)
),
),
tabsetPanel(
tabPanel("Map",
fluidRow(
leafletOutput("mymap"),br()
)
),
tabPanel("Price and Review Ratings",
),
tabPanel("Prices  Evolution",
)
)
),
tabItem(tabName = "city2",
fluidRow(
box(
uiOutput("", width = 6)
),
box(
uiOutput("", width = 6)
),
),
tabsetPanel(
tabPanel("Map",
fluidRow(
leafletOutput("mymap"),br()
)
),
tabPanel("Price and Review Ratings",
),
tabPanel("Prices  Evolution",
)
)
),
tabItem(tabName = "city3",
fluidRow(
box(
uiOutput("", width = 6)
),
box(
uiOutput("", width = 6)
),
),
tabsetPanel(
tabPanel("Map",
fluidRow(
leafletOutput("mymap"),br()
)
),
tabPanel("Price and Review Ratings",
),
tabPanel("Prices  Evolution",
)
)
)
)
)
)
runApp(ui)
library(shinydashboard)
library(shiny)
library(dplyr)
library(tm)
library(stringr)
library(tidyr)
library(leaflet)
library(plotrix)
library(ggplot2)
library(wordcloud)
ui <- dashboardPage(skin = "red",
dashboardHeader(title = "Data Analytics - Airbnb Projet"),
dashboardSidebar(
sidebarMenu(
menuItem("City1", tabName = "city1", icon = icon("home")
),
menuItem("City 2", tabName = "city2", icon = icon("home")
),
menuItem("City 3", tabName = "city3", icon = icon("home")
)
)
),
dashboardBody(
tabItems(
tabItem(tabName = "city1",
fluidRow(
box(
uiOutput("", width = 6)
),
box(
uiOutput("", width = 6)
),
),
tabsetPanel(
tabPanel("Map",
fluidRow(
leafletOutput("mymap"),br()
)
),
tabPanel("Price and Review Ratings",
),
tabPanel("Prices  Evolution",
)
)
),
tabItem(tabName = "city2",
fluidRow(
box(
uiOutput("", width = 6)
),
box(
uiOutput("", width = 6)
),
),
tabsetPanel(
tabPanel("Map",
fluidRow(
leafletOutput("mymap"),br()
)
),
tabPanel("Price and Review Ratings",
),
tabPanel("Prices  Evolution",
)
)
),
tabItem(tabName = "city3",
fluidRow(
box(
uiOutput("", width = 6)
),
box(
uiOutput("", width = 6)
),
),
tabsetPanel(
tabPanel("Map",
fluidRow(
leafletOutput("mymap"),br()
)
),
tabPanel("Price and Review Ratings",
),
tabPanel("Prices  Evolution",
)
)
)
)
)
)
runApp("ui")
library(shinydashboard)
library(shiny)
library(dplyr)
library(tm)
library(stringr)
library(tidyr)
library(leaflet)
library(plotrix)
library(ggplot2)
library(wordcloud)
ui <- dashboardPage(skin = "red",
dashboardHeader(title = "Data Analytics - Airbnb Projet"),
dashboardSidebar(
sidebarMenu(
menuItem("City1", tabName = "city1", icon = icon("home")
),
menuItem("City 2", tabName = "city2", icon = icon("home")
),
menuItem("City 3", tabName = "city3", icon = icon("home")
)
)
),
dashboardBody(
tabItems(
tabItem(tabName = "city1",
fluidRow(
box(
uiOutput("", width = 6)
),
box(
uiOutput("", width = 6)
),
),
tabsetPanel(
tabPanel("Map",
fluidRow(
leafletOutput("mymap"),br()
)
),
tabPanel("Price and Review Ratings",
),
tabPanel("Prices  Evolution",
)
)
),
tabItem(tabName = "city2",
fluidRow(
box(
uiOutput("", width = 6)
),
box(
uiOutput("", width = 6)
),
),
tabsetPanel(
tabPanel("Map",
fluidRow(
leafletOutput("mymap"),br()
)
),
tabPanel("Price and Review Ratings",
),
tabPanel("Prices  Evolution",
)
)
),
tabItem(tabName = "city3",
fluidRow(
box(
uiOutput("", width = 6)
),
box(
uiOutput("", width = 6)
),
),
tabsetPanel(
tabPanel("Map",
fluidRow(
leafletOutput("mymap"),br()
)
),
tabPanel("Price and Review Ratings",
),
tabPanel("Prices  Evolution",
)
)
)
)
)
)
runApp("ui")
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/ProjectApp/ProjectApp')
shiny::runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp')
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp')
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp')
shiny::runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp')
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp')
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp')
shinyApp(ui = ui, server = server)
## app.R ##
server <- function(input, output) {
output$distPlot <- renderPlot({
hist(rnorm(input$obs), col = 'darkgray', border = 'white')
})
}
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
sliderInput("obs", "Number of observations:", min = 10, max = 500, value = 100)
),
mainPanel(plotOutput("distPlot"))
)
)
shinyApp(ui = ui, server = server)
## app.R ##
server <- function(input, output) {
output$distPlot <- renderPlot({
hist(rnorm(input$obs), col = 'darkgray', border = 'white')
})
}
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
sliderInput("obs", "Number of observations:", min = 10, max = 500, value = 100)
),
mainPanel(plotOutput("distPlot"))
)
)
shinyApp(ui = ui, server = server)
## app.R ##
server <- function(input, output) {
output$distPlot <- renderPlot({
hist(rnorm(input$obs), col = 'darkgray', border = 'white')
})
}
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
sliderInput("obs", "Number of observations:", min = 10, max = 500, value = 100)
),
mainPanel(plotOutput("distPlot"))
)
)
shinyApp(ui = ui, server = server)
library(shinydashboard)
library(shiny)
library(dplyr)
library(tm)
library(stringr)
library(tidyr)
library(leaflet)
library(leaflet.extras)
library(plotrix)
library(ggplot2)
library(wordcloud)
## app.R ##
server <- function(input, output) {
output$distPlot <- renderPlot({
hist(rnorm(input$obs), col = 'darkgray', border = 'white')
})
}
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
sliderInput("obs", "Number of observations:", min = 10, max = 500, value = 100)
),
mainPanel(plotOutput("distPlot"))
)
)
shinyApp(ui = ui, server = server)
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp')
library(shinydashboard)
library(shiny)
library(dplyr)
library(tm)
library(stringr)
library(tidyr)
library(leaflet)
library(leaflet.extras)
library(plotrix)
library(ggplot2)
library(wordcloud)
listings_amsterdam <- read.csv(file='data_cleansed/amsterdam/2020-09-09/listings.csv')
listings_barca <- read.csv(file='data_cleansed/barcelona/2020-09-12/listings.csv')
test<-tail(names(sort(table(listings_barca$neighbourhood_cleansed))), 10)
listings_bordeaux <- read.csv(file='data_cleansed/bordeaux/2020-09-19/listings.csv')
## app.R ##
server <- function(input, output) {
output$distPlot <- renderPlot({
hist(rnorm(input$obs), col = 'darkgray', border = 'white')
})
}
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
sliderInput("obs", "Number of observations:", min = 10, max = 500, value = 100)
),
mainPanel(plotOutput("distPlot"))
)
)
shinyApp(ui = ui, server = server)
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp/Debug.R')
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp/Debug.R')
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp')
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp')
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp/Debug.R')
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp/Debug.R')
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp/Debug.R')
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp/Debug.R')
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp/Debug.R')
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp/Debug.R')
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp/Debug.R')
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp/Debug.R')
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp/Debug.R')
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp/Debug.R')
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp/Debug.R')
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp/Debug.R')
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp/Debug.R')
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp/Debug.R')
runApp('C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp/Debug.R')
head(barca)
listings_barca <- read.csv(file='data_cleansed/barcelona/2020-09-12/listings.csv')
head(barca)
library(shinydashboard)
library(shiny)
library(dplyr)
library(tm)
library(stringr)
library(tidyr)
library(leaflet)
library(leaflet.extras)
library(plotrix)
library(ggplot2)
library(wordcloud)
setwd("C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp")
listings_barca <- read.csv(file='data_cleansed/barcelona/2020-09-12/listings.csv')
head(barca)
library(plotrix)
library(shinydashboard)
library(shiny)
library(dplyr)
library(tm)
library(stringr)
library(tidyr)
library(leaflet)
library(leaflet.extras)
library(plotrix)
library(ggplot2)
library(wordcloud)
setwd("C:/Users/Augustin/Desktop/Cours/Data Analytics/Project 2/ProjectApp")
listings_barca <- read.csv(file='data_cleansed/barcelona/2020-09-12/listings.csv')
head(listings_barca)
is.null(listings_barca$latitude)
runApp('Debug.R')
runApp('Debug.R')
runApp('Debug.R')
runApp('Debug.R')
runApp('Debug.R')
runApp('Debug.R')
runApp('Debug.R')
runApp('Debug.R')
runApp('Debug.R')
runApp('Debug.R')
runApp('Debug.R')
runApp('Debug.R')
runApp('Debug.R')
install.packages("magrittr")
install.packages("magrittr")
library(shiny); runApp('Debug.R')
runApp('Debug.R')
runApp('Debug.R')
runApp('Debug.R')
runApp('Debug.R')
runApp('Debug.R')
runApp('Debug.R')
runApp('Debug.R')
runApp('Debug.R')
runApp('Debug.R')
runApp('Debug.R')
runApp('Debug.R')
runApp('Debug.R')
runApp('Debug.R')
